apply plugin: 'org.springframework.boot'
apply plugin: 'docker'


dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-amqp")

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    compile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'

    compile group: 'org.web3j', name: 'core', version: "${web3jVersion}"
    compile group: 'commons-codec', name: 'commons-codec', version: "${commonscodecVersion}"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonslang3Version}"
    compile group: 'com.github.jnr', name: 'jffi', version: '1.3.0'


    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile "org.assertj:assertj-core:${assertjVersion}"
}

jar {
    baseName = 'worker'
    version = null
}

bootRun {
    systemProperties System.properties
}


task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    tag = "${project.group}/azrael"
    version="latest"
    doFirst {
        copy {
            from jar
            into "${stageDir}/target/"
        }
    }
}
